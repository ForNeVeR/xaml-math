using XamlMath.Atoms;

namespace XamlMath.Parsers;

/// <summary>Context for parsing of an environment block.</summary>
/// <param name="Parser">TeX formula parser that calls the command.</param>
/// <param name="Formula">Current formula that is being constructed.</param>
/// <param name="Environment">An environment in which the command should be parsed.</param>
/// <param name="EnvironmentSource">
/// Source of the whole environment block: includes the \begin command, the environment name, the content and the \end
/// command (with a duplicated environment name as well). Useful to provide the source information; shouldn't  itself be
/// parsed.
/// </param>
/// <param name="EnvironmentBodySource">The environment body (the text between \begin and \end commands).</param>
/// <remarks>An "environment block" is text like <code>\begin{pmatrix}content\end{pmatrix}.</code></remarks>
internal sealed record EnvironmentContext(
    TexFormulaParser Parser,
    TexFormula Formula,
    ICommandEnvironment Environment,
    SourceSpan EnvironmentSource,
    SourceSpan EnvironmentBodySource
);

/// <summary>A result of processing the environment block.</summary>
/// <param name="Atom">Resulting atom.</param>
/// <param name="AppendMode">
/// Controls how an atom generated by this command should be handled: should it be added to the end of an existing
/// formula, or should it replace the formula completely.
/// </param>
internal sealed record EnvironmentProcessingResult(
    Atom? Atom,
    AtomAppendMode AppendMode = AtomAppendMode.Add
);

/// <summary>A parser that's able to process an environment block.</summary>
internal interface IEnvironmentParser
{
    EnvironmentProcessingResult ProcessEnvironment(EnvironmentContext context);
}
